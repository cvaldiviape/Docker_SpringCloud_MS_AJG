spring.application.name=service-users
# en caso la variable de entorno "PORT" no exista, tomara el puerto 8001 por defecto
server.port=${PORT:8001}

# "host.docker.internal" hace referencia al localhost de mi PC, lo coloco ya que se va dockerizar, y sucede en el contenedor no tengo "mysql", asi que tendre que buscarlo en mi maquina FISICA (mi PC)
# spring.datasource.url=jdbc:mysql://host.docker.internal:3306/db_docker_users?useSSL=false&serverTimezone=America/Bogota&allowPublicKeyRetrieval=false

# "db-mysql" es el nombre del contenedor que tengo de la base de datos "MySQL"
spring.datasource.url=jdbc:mysql://${DB_HOST:db-mysql:3306}/${DB_DATABASE:db_docker_users}?useSSL=false&serverTimezone=America/Bogota&allowPublicKeyRetrieval=false
# cuando modifico cualquiera cosa del proyecto "service-users" tendre que generar de nuevo el "JAR", pero esta vez omitiendo los TEST, para que no me de errores, ya que "host.docker.internal" es un host
# inexistente, el comando seria:  .\mvnw clean package -DskipTests

spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug



saksa.service.courses.url=${SERVICE_COURSES_URL:service-courses:8002}
