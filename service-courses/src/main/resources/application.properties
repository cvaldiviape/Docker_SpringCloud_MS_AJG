spring.application.name=service-courses
server.port=${PORT:8002}

# "db-postgres" es el nombre del contenedor que tengo de la base de datos "PostgreSQL"
spring.datasource.url=jdbc:postgresql://${DB_HOST:db-postgres:5432}/${DB_DATABASE:db_docker_courses}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:saksa}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#saksa.service.users.url=${SERVICE_USERS_URL:service-users:8001}

spring.cloud.kubernetes.discovery.enabled=true
# Esta propiedad habilita la API de Kubernetes para la gestión de secretos en la aplicación Spring. Los secretos en Kubernetes son objetos que almacenan información sensible,
# como contraseñas, tokens de acceso, claves API, etc. Al activar esta propiedad, Spring Cloud Kubernetes permite acceder a los secretos de Kubernetes a través de su API y utilizarlos
# en la aplicación de manera segura.
spring.cloud.kubernetes.secrets.enable-api=true
# Esta propiedad indica a Spring Cloud Kubernetes que descubra automáticamente los servicios registrados en todos los namespaces de Kubernetes. Por defecto, Spring Cloud Kubernetes solo
# descubre los servicios del namespace en el que se encuentra desplegada la aplicación. Al establecer esta propiedad en true, se extiende la búsqueda de servicios a todos los namespaces,
# lo que puede ser útil si se desea descubrir servicios en múltiples namespaces dentro del clúster de Kubernetes.
spring.cloud.kubernetes.discovery.all-namespaces=true